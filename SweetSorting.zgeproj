<?xml version="1.0" encoding="iso-8859-1" ?>
<ZApplication Name="App" Caption="ZGameEditor application" ClearColor="0 1 1 1" NoSound="1">
  <OnLoaded>
    <DefineVariable Name="GameScore"/>
    <DefineVariable Name="PlayerLives"/>
    <DefineVariable Name="PlayerPosition"/>
    <DefineVariable Name="CandyTimer"/>
    <DefineVariable Name="CandySwitch"/>
    <SetAppState State="Title"/>
  </OnLoaded>
  <States>
    <AppState Name="Title" CollisionsEnabled="0">
      <OnStart>
        <ZExpression Expression="App.Caption = &quot;Title&quot;;"/>
      </OnStart>
      <OnUpdate>
        <KeyPress Comment="Press Space to Continue" Keys=" ">
          <OnPressed>
            <SetAppState State="Playing"/>
          </OnPressed>
        </KeyPress>
      </OnUpdate>
      <OnRender>
        <UseMaterial Material="BaseMaterial"/>
        <RenderSetColor Color="1 0 0.502 1"/>
        <RenderText Text="Sweet Sorting"/>
      </OnRender>
    </AppState>
    <AppState Name="Playing">
      <OnStart>
        <ZExpression Comment="VariableInitialize">
          <Expression>
<![CDATA[GameScore = 0;
PlayerLives = 3;
App.Caption = "Playing";]]>
          </Expression>
        </ZExpression>
        <SpawnModel Model="PlayerModel" Position="0 -5 0"/>
      </OnStart>
      <OnUpdate>
        <ZExpression Expression="CandyTimer = CandyTimer - App.DeltaTime;"/>
        <Condition Comment="Spawn Timer" Expression="return CandyTimer &lt;= 0;">
          <OnTrue>
            <ZExpression Comment="CandySwitch Set" Expression="CandySwitch = random(50, 50);"/>
            <Condition Comment="CandySwitch Check" Expression="return CandySwitch &lt; 50;">
              <OnTrue>
                <SpawnModel Model="CandyLeft" Position="0 6 0"/>
              </OnTrue>
              <OnFalse>
                <SpawnModel Model="CandyRight" Position="0 6 0"/>
              </OnFalse>
            </Condition>
            <ZExpression Comment="Timer Reset" Expression="CandyTimer = random(2, 1.5);"/>
          </OnTrue>
        </Condition>
        <Condition Comment="Game Over" Expression="return PlayerLives &lt;= 0;">
          <OnTrue>
            <RemoveAllModels/>
            <SetAppState State="Title"/>
          </OnTrue>
        </Condition>
      </OnUpdate>
      <OnRender>
        <UseMaterial Material="BaseMaterial"/>
        <RenderSetColor Color="1 0 0 1"/>
        <RenderText Text="Red" X="-0.75" Y="0.6"/>
        <RenderSetColor Color="0 0 1 1"/>
        <RenderText Text="Blue" X="0.75" Y="0.6"/>
      </OnRender>
    </AppState>
  </States>
  <OnRender>
    <UseMaterial Material="BaseMaterial"/>
    <RenderSetColor Color="0.502 0 0 1"/>
    <RenderText Text="Score:" TextFloatRef="GameScore Value" X="-0.95" Y="0.95" Scale="0.5" Align="1"/>
    <RenderSetColor Color="0 0.502 0 1"/>
    <RenderText Text="Lives:" TextFloatRef="PlayerLives Value" X="0.6" Y="0.95" Scale="0.5" Align="1"/>
  </OnRender>
  <Content>
    <Material Name="BaseMaterial" Blend="1"/>
    <Group Name="Player">
      <Children>
        <Mesh Name="PlayerBody">
          <Producers>
            <MeshBox Scale="0.75 0.75 0.5"/>
          </Producers>
        </Mesh>
        <Model Name="PlayerModel" Rotation="0 0 0.125" Scale="2 2 1">
          <Definitions>
            <DefineVariable Name="PlayerSpeed"/>
          </Definitions>
          <OnRender>
            <UseMaterial Material="PlayerMaterial"/>
            <RenderSetColor Color="0.502 0.502 0.502 1"/>
            <RenderMesh Mesh="PlayerBody"/>
          </OnRender>
          <OnUpdate>
            <ZExpression Expression="CurrentModel.Velocity.X = 0;"/>
            <KeyPress Keys="&gt;">
              <OnPressed>
                <ZExpression Expression="CurrentModel.Velocity.X = PlayerSpeed;"/>
              </OnPressed>
            </KeyPress>
            <KeyPress Keys="&lt;">
              <OnPressed>
                <ZExpression Expression="CurrentModel.Velocity.X = PlayerSpeed * -1;"/>
              </OnPressed>
            </KeyPress>
            <ZExpression Name="RestrictMovement">
              <Expression>
<![CDATA[CurrentModel.Position.X = clamp(CurrentModel.Position.X, -5, 5);
PlayerPosition = CurrentModel.Position.X;]]>
              </Expression>
            </ZExpression>
          </OnUpdate>
          <OnSpawn>
            <ZExpression Expression="PlayerSpeed = 10;"/>
          </OnSpawn>
        </Model>
        <Material Name="PlayerMaterial"/>
      </Children>
    </Group> <!-- Player -->

    <Group Name="Candy">
      <Children>
        <Model Name="CandyLeft">
          <OnRender>
            <RenderSetColor Color="1 0 0 1"/>
            <RenderMesh Mesh="CandyMesh"/>
          </OnRender>
          <OnUpdate>
            <Condition Expression=" return CurrentModel.Position.Y &lt; -5;">
              <OnTrue>
                <ZExpression>
                  <Expression>
<![CDATA[if(CurrentModel.Position.X > PlayerPosition) {
  PlayerLives = PlayerLives - 1;
} else {
  GameScore = GameScore + 1;
}]]>
                  </Expression>
                </ZExpression>
                <RemoveModel/>
              </OnTrue>
            </Condition>
          </OnUpdate>
          <OnSpawn>
            <ZExpression>
              <Expression>
<![CDATA[CurrentModel.Position.X = random(0, 4);
CurrentModel.Velocity.Y = -7;]]>
              </Expression>
            </ZExpression>
          </OnSpawn>
        </Model>
        <Mesh Name="CandyMesh">
          <Producers>
            <MeshSphere Scale="0.7 0.7 0.7" ZSamples="15" RadialSamples="15"/>
          </Producers>
        </Mesh>
        <Model Name="CandyRight">
          <OnRender>
            <RenderSetColor Color="0 0 1 1"/>
            <RenderMesh Mesh="CandyMesh"/>
          </OnRender>
          <OnUpdate>
            <Condition Expression=" return CurrentModel.Position.Y &lt; -5;">
              <OnTrue>
                <ZExpression>
                  <Expression>
<![CDATA[if(CurrentModel.Position.X < PlayerPosition) {
  PlayerLives = PlayerLives - 1;
} else {
  GameScore = GameScore + 1;
}]]>
                  </Expression>
                </ZExpression>
                <RemoveModel/>
              </OnTrue>
            </Condition>
          </OnUpdate>
          <OnSpawn>
            <ZExpression>
              <Expression>
<![CDATA[CurrentModel.Position.X = random(0, 4);
CurrentModel.Velocity.Y = -7;]]>
              </Expression>
            </ZExpression>
          </OnSpawn>
        </Model>
      </Children>
    </Group> <!-- Candy -->

  </Content>
</ZApplication>
